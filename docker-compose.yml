version: "3.8"

services:
  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres:/var/lib/potsgresql/data:delegated
    ports:
      - 54321:5432
    env_file:
      - .env.development
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:alpine
    ports:
      - 63790:6379
    volumes:
      - redis:/data
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
  
  app:
    image: prototype_kak
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RUBY_VERSION: '3.0.1'
        BUNDLE_VERSION: '2.2.15'
        NODE_MAJOR: '14'
        YARN_VERSION: '1.22.17'
    ports:
      - 3005:3000
    command: ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
    depends_on:
      webpacker:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.development
    environment:
      RAILS_ENV: 'development'
      REDIS_URL: redis://redis:6379

  webpacker:
    image: prototype_kak
    command: ["bin/webpack-dev-server"]
    ports:
      - 3035:3035
    environment:
      NODE_ENV: 'development'
      RAILS_ENV: 'development'
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
      YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - packs-test:/app/public/packs-test

volumes:
  postgres:
  redis:
  packs:
  packs-test:
  bundle:
  node_modules: