require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/dampaks", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Dampak. As you add validations to Dampak, be sure to
  # adjust the attributes here as well.
  before(:each) { sign_in(user) }
  let(:user) { create(:user) }

  let(:valid_attributes) do
    {
      deskripsi: 'Dampak ABC',
      kode_skala: 'abc',
      nilai: '4',
      tipe_nilai: 'tipe nilai',
      type: 'Dampak',
      keterangan: 'xzy'
    }
  end

  let(:invalid_attributes) do
    {
      deskripsi: 'Dampak ABC',
      kode_skala: nil,
      nilai: '4',
      tipe_nilai: 'tipe nilai'
    }
  end

  describe "GET /index" do
    it "renders a successful response" do
      Dampak.create! valid_attributes
      get dampaks_url
      expect(response).to be_successful
    end
  end

  describe "GET /show" do
    it "renders a successful response" do
      dampak = Dampak.create! valid_attributes
      get dampak_url(dampak)
      expect(response).to be_successful
    end
  end

  describe "GET /new" do
    it "renders a successful response" do
      get new_dampak_url
      expect(response).to be_successful
    end
  end

  describe "GET /edit" do
    it "renders a successful response" do
      dampak = Dampak.create! valid_attributes
      get edit_dampak_url(dampak)
      expect(response).to be_successful
    end
  end

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new Dampak" do
        expect do
          post dampaks_url, params: { dampak: valid_attributes }
        end.to change(Dampak, :count).by(1)
      end

      it "redirects to the created dampak" do
        post dampaks_url, params: { dampak: valid_attributes }
        expect(response).to redirect_to(dampak_url(Dampak.last))
      end
    end

    context "with invalid parameters" do
      it "does not create a new Dampak" do
        expect do
          post dampaks_url, params: { dampak: invalid_attributes }
        end.to change(Dampak, :count).by(0)
      end

      it "renders a successful response (i.e. to display the 'new' template)" do
        post dampaks_url, params: { dampak: invalid_attributes }
        expect(response).to render_template(:new)
        expect(response).to have_http_status(:unprocessable_entity)
      end
    end
  end

  describe "PATCH /update" do
    context "with valid parameters" do
      let(:new_attributes) do
        {
          deskripsi: 'Dampak ABC',
          kode_skala: 'abc',
          nilai: '4',
          tipe_nilai: 'tipe nilai',
          type: 'Dampak'
        }
      end

      it "redirects to the dampak" do
        dampak = Dampak.create! valid_attributes
        patch dampak_url(dampak), params: { dampak: new_attributes }
        dampak.reload
        expect(response).to redirect_to(dampak_url(dampak))
      end
    end

    context "with invalid parameters" do
      it "renders a successful response (i.e. to display the 'edit' template)" do
        dampak = Dampak.create! valid_attributes
        patch dampak_url(dampak), params: { dampak: invalid_attributes }
        expect(response).to render_template(:edit)
        expect(response).to have_http_status(:unprocessable_entity)
      end
    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested dampak" do
      dampak = Dampak.create! valid_attributes
      expect do
        delete dampak_url(dampak)
      end.to change(Dampak, :count).by(-1)
    end

    it "redirects to the dampaks list" do
      dampak = Dampak.create! valid_attributes
      delete dampak_url(dampak)
      expect(response).to redirect_to(dampaks_url)
    end
  end
end
