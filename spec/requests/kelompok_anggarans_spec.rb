require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/kelompok_anggarans", type: :request do
  before(:each) do
    sign_in user
  end
  let(:user) { create(:user) }

  # This should return the minimal set of attributes required to create a valid
  # KelompokAnggaran. As you add validations to KelompokAnggaran, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    {
      kelompok: 'Murni',
      kode_kelompok: '2022_murni',
      tahun: '2022'
    }
  end

  let(:invalid_attributes) do
    {
      kelompok: '',
      kode_kelompok: '',
      tahun: '2022'

    }
  end

  describe "GET /index" do
    it "renders a successful response" do
      KelompokAnggaran.create! valid_attributes
      get kelompok_anggarans_url
      expect(response).to be_successful
    end
  end

  describe "GET /show" do
    it "renders a successful response" do
      kelompok_anggaran = KelompokAnggaran.create! valid_attributes
      get kelompok_anggaran_url(kelompok_anggaran)
      expect(response).to be_successful
    end
  end

  describe "GET /new" do
    it "renders a successful response" do
      get new_kelompok_anggaran_url
      expect(response).to be_successful
    end
  end

  describe "GET /edit" do
    it "renders a successful response" do
      kelompok_anggaran = KelompokAnggaran.create! valid_attributes
      get edit_kelompok_anggaran_url(kelompok_anggaran)
      expect(response).to render_template(:edit)
      expect(response).to be_successful
    end
  end

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new KelompokAnggaran" do
        expect do
          post kelompok_anggarans_url, params: { kelompok_anggaran: valid_attributes }
        end.to change(KelompokAnggaran, :count).by(1)
      end

      it "redirects to the created kelompok_anggarans index" do
        post kelompok_anggarans_url, params: { kelompok_anggaran: valid_attributes }
        expect(response).to redirect_to(kelompok_anggarans_url)
      end
    end

    context "with invalid parameters" do
      it "does not create a new KelompokAnggaran" do
        expect do
          post kelompok_anggarans_url, params: { kelompok_anggaran: invalid_attributes }
        end.to change(KelompokAnggaran, :count).by(0)
      end

      it "renders a successful response (i.e. to display the 'new' template)" do
        post kelompok_anggarans_url, params: { kelompok_anggaran: invalid_attributes }
        expect(response).to render_template(:new)
        expect(response).to have_http_status(:unprocessable_entity)
      end
    end
  end

  describe "PATCH /update" do
    context "with valid parameters" do
      let(:new_attributes) do
        {
          kelompok: 'Murni',
          kode_kelompok: '2023_murni',
          tahun: '2023'
        }
      end

      it "updates the requested kelompok_anggaran" do
        kelompok_anggaran = KelompokAnggaran.create! valid_attributes
        patch kelompok_anggaran_url(kelompok_anggaran), params: { kelompok_anggaran: new_attributes }
        kelompok_anggaran.reload
        expect(KelompokAnggaran.last.tahun).to eq('2023')
        expect(response).to redirect_to(kelompok_anggarans_url)
        expect(flash[:notice]).to_not be_nil
      end

      it "redirects to the kelompok_anggaran" do
        kelompok_anggaran = KelompokAnggaran.create! valid_attributes
        patch kelompok_anggaran_url(kelompok_anggaran), params: { kelompok_anggaran: new_attributes }
        kelompok_anggaran.reload
        expect(response).to redirect_to(kelompok_anggarans_url)
      end
    end

    context "with invalid parameters" do
      it "renders a successful response (i.e. to display the 'edit' template)" do
        kelompok_anggaran = KelompokAnggaran.create! valid_attributes
        patch kelompok_anggaran_url(kelompok_anggaran), params: { kelompok_anggaran: invalid_attributes }
        expect(response).to render_template(:edit)
        expect(response).to have_http_status(:unprocessable_entity)
      end
    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested kelompok_anggaran" do
      kelompok_anggaran = KelompokAnggaran.create! valid_attributes
      expect do
        delete kelompok_anggaran_url(kelompok_anggaran)
      end.to change(KelompokAnggaran, :count).by(-1)
    end

    it "redirects to the kelompok_anggarans list" do
      kelompok_anggaran = KelompokAnggaran.create! valid_attributes
      delete kelompok_anggaran_url(kelompok_anggaran)
      expect(response).to redirect_to(kelompok_anggarans_url)
    end
  end
end
